<!DOCTYPE html>
<html lang="zh-Hant-TW">

<head>
    <title>資訊種子培訓計畫後台</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="KeyWords" content="培訓計畫,資訊種子,課程,itseed,講座,實習計畫,實習機會,夥伴,學習">
    <meta name="DEscription" content="培訓計畫,itseed">
    <meta property="og:image" content="/images/index/section15-1.jpg">
    <link rel="shortcut icon" type="image/png" href="/images/layout/logo.ico" />
    <!--
        Stylesheets and Preprocessors
        ==============================
        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).
        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->
    
    <!--手動添加-->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css" integrity="sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp" crossorigin="anonymous">


    <script src="/js/specifies/jquery-1.11.2.min.js"></script>
    <script src="/js/specifies/jquery.color.min.js"></script>
    <!--STYLES_ADMIN-->
    <link rel="stylesheet" href="/styles/dependencies/bootstrap.css?v=1561995135906">
    <link rel="stylesheet" href="/styles/Admin/datatables.css?v=1561995135906">
    <link rel="stylesheet" href="/styles/Admin/jquery-ui.min.css?v=1561995135906">
    <link rel="stylesheet" href="/styles/Admin/jquery.datetimepicker.css?v=1561995135906">
    <link rel="stylesheet" href="/styles/Admin/owl.carousel.css?v=1561995135906">
    <link rel="stylesheet" href="/styles/Admin/owl.theme.css?v=1561995135906">
    <link rel="stylesheet" href="/styles/Admin/owl.transitions.css?v=1561995135906">
    <link rel="stylesheet" href="/styles/Admin/summernote.css?v=1561995135906">
    <link rel="stylesheet" href="/styles/b_importer_17.css?v=1561995135906">
    <!--STYLES_ADMIN END-->
    
    <!--SCRIPTS_ADMIN-->
    <script src="/js/dependencies/sails.io.js?v=1561995135906"></script>
    <script src="/js/dependencies/bootstrap.js?v=1561995135906"></script>
    <script src="/js/dependencies/fb.js?v=1561995135906"></script>
    <script src="/js/dependencies/sweetalert2-7.21.1.js?v=1561995135906"></script>
    <script src="/js/Admin/dependencies/datatables.min.js?v=1561995135906"></script>
    <script src="/js/Admin/dependencies/handlebars-v3.0.3.js?v=1561995135906"></script>
    <script src="/js/Admin/dependencies/jquery-ui.min.js?v=1561995135906"></script>
    <script src="/js/Admin/dependencies/jquery.datetimepicker.js?v=1561995135906"></script>
    <script src="/js/Admin/dependencies/summernote.min.js?v=1561995135906"></script>
    <!--SCRIPTS_ADMIN END-->
</head>

<body>
    <%- body %>



        <!--
        Client-side Templates
        ========================
        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.
        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

        <!--TEMPLATES-->
        
        <!--TEMPLATES END-->


        <!--
      Client-side Javascript
      ========================
      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).
      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript
    -->
</body>

</html>